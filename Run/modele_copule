library("here")
library("copula")
library("PerformanceAnalytics")

source(here("Run", "portefeuille_options.R"))

# Compute sp500 and VIX log returns
log_rets_sp500 <- as.vector(PerformanceAnalytics::CalculateReturns(sp500, method = "log")[-1])
log_rets_vix <- as.vector(PerformanceAnalytics::CalculateReturns(vix, method = "log")[-1])

# Compute means and sd, and set nu for sp500 and VIX
theta_sp500 <- c(mean(log_rets_sp500), sd(log_rets_sp500), 10)
theta_vix <- c(mean(log_rets_vix), sd(log_rets_vix), 5)

# Compute probability integral transform
U_sp500 <- f_PIT_t(log_rets_sp500, theta_sp500)
U_vix <- f_PIT_t(log_rets_vix, theta_vix)
U <- cbind(U_sp500, U_vix)

# Set normal copula with d=2 & fit it to U data
C <-normalCopula(dim = 2)
fit <- fitCopula(C, data = U, method = "ml")

# Set parameters for scenario generation
scenarios <- 10000
n <- 5

# Samples
data <- f_generate_copula_log_returns(fit, scenarios, n, theta_sp500, theta_vix)

# Separate marginals
data_sp500 <- matrix(data[,1], nrow = scenarios, ncol = n)
data_vix <- matrix(data[,2], nrow = scenarios, ncol = n)

# Compute cumulative returns and price for SP500
cumul_rets_sp500 <- f_cumul_returns(data_sp500, scenarios)
prices_sp500 <- last_sp500 * cumul_rets_sp500

# Compute cumulative returns and price for VIX
cumul_rets_vix <- f_cumul_returns(data_vix, scenarios)
prices_vix <- last_vix * cumul_rets_vix

# Define Black-Scholes variables
K <- c(1600, 1650, 1750, 1800)
T <- f_days_to_years(c(15, 15, 35, 35), 250)
T_r <- f_days_to_years(c(15, 15, 35, 35), 360)
r <- f_linear_interpolation(T_r, rf_maturities, rf_rates)

# Define option price matrix
options_prices_copule <- matrix(data = NA, nrow = scenarios, ncol = 4)

for (i in 1:scenarios) {
    price_sp500 <- prices_sp500[i, n+1]
    price_vix <- prices_vix[i, n+1]
    S <- rep(price_sp500, 4)
    sig <- rep(price_vix, 4)
    prices <- f_black_scholes(S, K, r, T, sig, type="C")
    options_prices_copule[i,] <- prices
}

# Option quantities
quantities <- c(1, 1, 1, 1)

# portfolio values t=5
values_copule <- options_prices_copule %*% quantities

# portfolio profits t=5
profits_copule <- values_copule - as.numeric(value)

# VaR
VaR_copule <- f_VaR(profits_copule, alpha = 0.95)

# Expected Shortfall
ES_copule <- f_ES(profits_copule, alpha = 0.95)



